<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>好奇心是最好的老師</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-24T11:15:20.886Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Dino</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记录零散的小知识点</title>
    <link href="http://yoursite.com/2018/05/24/%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://yoursite.com/2018/05/24/简单记录小知识点/</id>
    <published>2018-05-24T07:54:00.000Z</published>
    <updated>2018-05-24T11:15:20.886Z</updated>
    
    <content type="html"><![CDATA[<ul><li>1.rgba(r,g,b,a): a表透明度 可以直接使用</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;1.rgba(r,g,b,a): a表透明度 可以直接使用&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
      <category term="随记" scheme="http://yoursite.com/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
      <category term="自学" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AD%A6/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>前端学习别人的经验</title>
    <link href="http://yoursite.com/2018/05/24/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E5%88%AB%E4%BA%BA%E7%9A%84%E5%BB%BA%E8%AE%AE/"/>
    <id>http://yoursite.com/2018/05/24/前端学习别人的建议/</id>
    <published>2018-05-24T05:43:00.000Z</published>
    <updated>2018-05-24T11:15:20.882Z</updated>
    
    <content type="html"><![CDATA[<p>知乎(空无戒)评论：<br>作为一个在职的前端，学习方向建议从手头上的实际项目出发，从封装工具到自动化构建，减少自己的一般事务性的体力活，然后再深入学习提升整体项目架构【前端部分】在拓展性，可维护性及易测试性。而后有余力再进一步思考如何提升性能 安全 交互体验 等等等等。<br>如果是一个脱产的想自学前端，那么学习方向就是能够较快地搭建出符合W3C规范的静态页面，稍微会写一些原生的JS以及熟练用JQ即可，然后就先找一个低薪的前端岗位做着，边做边学才比较靠谱。<br>那么2018值得关注的有哪些前端技术，我建议是 webAssambly  PWA indexedDB 和  webGL，这些都是已成为或将成为主流支持的前端新技术，并且必然影响前端今后的开发思路，流程及工作范围。个人认为真正的大前端不是往服务端走，而是完整的客户端web应用工程师</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;知乎(空无戒)评论：&lt;br&gt;作为一个在职的前端，学习方向建议从手头上的实际项目出发，从封装工具到自动化构建，减少自己的一般事务性的体力活，然后再深入学习提升整体项目架构【前端部分】在拓展性，可维护性及易测试性。而后有余力再进一步思考如何提升性能 安全 交互体验 等等等等。&lt;
      
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="自学" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AD%A6/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="经验建议" scheme="http://yoursite.com/tags/%E7%BB%8F%E9%AA%8C%E5%BB%BA%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>C++类实例化</title>
    <link href="http://yoursite.com/2018/05/23/C++%E7%B1%BB%E5%AE%9E%E4%BE%8B%E5%8C%96%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>http://yoursite.com/2018/05/23/C++类实例化注意事项/</id>
    <published>2018-05-23T02:59:00.000Z</published>
    <updated>2018-05-24T11:15:20.868Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sample</span>&#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//类的同名初始化函数</span></span><br><span class="line">        Sample(<span class="keyword">int</span> x)&#123;</span><br><span class="line">            p= <span class="keyword">new</span> <span class="keyword">int</span>(x);<span class="comment">// new int(x) 新申请空间，调用完后不释放空间，所以将地址赋值给p 则p 指向了这段新申请内存空间，所以当做  *p 返回时，即取出p所执行空间的值，所以会输出5</span></span><br><span class="line"><span class="comment">// *p=x;// A: 将 x 的值赋值给 P 所指向的空间,而p之前并没有指向任何地方，这个操作将是非法的</span></span><br><span class="line"><span class="comment">// *p=new int(x);// C: 这个操作同 A 的结果一样 p之前并没有指向任何地方，这个操作将是非法的</span></span><br><span class="line"><span class="comment">// p=&amp;x;// D: 对x取地址，赋值给指针p，那么p 将指向 x 的那块内存空间，但是 x 是形式参数(也有人说是方法参数，都可以)，函数调用完了之后，内存就释放了，所以再返回 *p（即取出那块内存空间的值），已经找不到了。所以错误</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//类的析构函数 当对象脱离其作用域时 系统自动执行析构函数 析构函数往往用来做“清理善后” 的工作 比如释放动态分配的内存等</span></span><br><span class="line">        ~Sample()&#123;</span><br><span class="line">            <span class="keyword">if</span>(p) <span class="keyword">delete</span> p;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> *p;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="keyword">int</span> *p;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="function">Sample <span class="title">S</span><span class="params">(<span class="number">5</span>)</span></span>;<span class="comment">//注初始化类的方式: Sample类名 S为实例名 实例函数形式要与类的同名初始化函数一致</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;S.show()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li
      
    
    </summary>
    
      <category term="C++" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="自学" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AD%A6/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="总是忘记的" scheme="http://yoursite.com/tags/%E6%80%BB%E6%98%AF%E5%BF%98%E8%AE%B0%E7%9A%84/"/>
    
  </entry>
  
  <entry>
    <title>C++类继承注意事项</title>
    <link href="http://yoursite.com/2018/05/23/C++%E7%B1%BB%E7%BB%A7%E6%89%BF%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>http://yoursite.com/2018/05/23/C++类继承注意事项/</id>
    <published>2018-05-23T02:59:00.000Z</published>
    <updated>2018-05-24T11:15:20.870Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> a1;<span class="comment">//默认私有</span></span><br><span class="line"><span class="keyword">protected</span>:<span class="comment">//私有成员不能被继承</span></span><br><span class="line">  <span class="keyword">int</span> a2;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="keyword">int</span> a3;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>:</span> <span class="keyword">public</span> A&#123;</span><br><span class="line">  <span class="keyword">int</span> b1;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">  <span class="keyword">int</span> b2;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="keyword">int</span> b3;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span><span class="keyword">private</span> B&#123;<span class="comment">//私有继承 父类的protected和public属性在子类中变为private</span></span><br><span class="line">  <span class="keyword">int</span> c1;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">  <span class="keyword">int</span> c2;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="keyword">int</span> c3;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  B obb;</span><br><span class="line">  C obc;</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;obb.a1;<span class="comment">//1错a1默认私有</span></span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;obb.a2;<span class="comment">//2错a2为父类私有成员</span></span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;obb.a3;<span class="comment">//3</span></span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;obc.b1;<span class="comment">//4错私有继承 不能访父类成员</span></span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;obc.b2;<span class="comment">//5错私有继承 不能访父类成员</span></span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;obc.b3;<span class="comment">//6错私有继承 不能访父类成员</span></span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;obc.c3;<span class="comment">//7可以访问自己的成员</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">类的继承后方法属性变化：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">private 属性不能够被继承。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">使用private继承，父类的protected和public属性在子类中变为private；</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">使用protected继承，父类的protected和public属性在子类中变为protected；</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">使用public继承，父类中的protected和public属性不发生改变; </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">private, public, protected 访问标号的访问范围：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">private：只能由1.该类中的函数、2.其友元函数访问。</span></span><br><span class="line"><span class="comment">不能被任何其他访问，该类的对象也不能访问。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">protected：可以被1.该类中的函数、2.子类的函数、以及3.其友元函数访问。</span></span><br><span class="line"><span class="comment">但不能被该类的对象访问。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">public：可以被1.该类中的函数、2.子类的函数、3.其友元函数访问，也可以由4.该类的对象访问。</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">注：友元函数包括3种：设为友元的普通的非成员函数；设为友元的其他类的成员函数；设为友元类中的所有成员函数。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li
      
    
    </summary>
    
      <category term="C++" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="自学" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AD%A6/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="总是忘记的" scheme="http://yoursite.com/tags/%E6%80%BB%E6%98%AF%E5%BF%98%E8%AE%B0%E7%9A%84/"/>
    
  </entry>
  
  <entry>
    <title>PS白色部分变成透明</title>
    <link href="http://yoursite.com/2018/05/18/PS%E7%99%BD%E8%89%B2%E5%8F%98%E9%80%8F%E6%98%8E/"/>
    <id>http://yoursite.com/2018/05/18/PS白色变透明/</id>
    <published>2018-05-18T15:16:41.748Z</published>
    <updated>2018-05-24T11:15:20.871Z</updated>
    
    <content type="html"><![CDATA[<p>虽然是很简单的东西，但是由于每次都忘记，所以这次又踩了一次坑之后决定记起来，下次直接看就知道了</p><ul><li>1.直接把要修改的图片拖到PS</li><li>2.选‘魔棒工具’</li><li>3.选择要保留的区域，右键-&gt;通过拷贝的图层，直接生成一个除了选中区域其他区域都为透明的图层</li><li>4.右键新生成的图层-&gt;快速导出为png（如果对最后生成的图像大小有要求，则屏蔽其他不要的图层，只保留透明的图层，文件-&gt;导出-&gt;导出为…-&gt;设置大小等，格式一定要是png-&gt;导出-&gt;OK）</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;虽然是很简单的东西，但是由于每次都忘记，所以这次又踩了一次坑之后决定记起来，下次直接看就知道了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.直接把要修改的图片拖到PS&lt;/li&gt;
&lt;li&gt;2.选‘魔棒工具’&lt;/li&gt;
&lt;li&gt;3.选择要保留的区域，右键-&amp;gt;通过拷贝的图层，直接生成一个
      
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="PS" scheme="http://yoursite.com/tags/PS/"/>
    
  </entry>
  
  <entry>
    <title>freecodecamp前端学习记录</title>
    <link href="http://yoursite.com/2018/05/18/freecodecamp%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2018/05/18/freecodecamp学习记录/</id>
    <published>2018-05-18T05:45:00.000Z</published>
    <updated>2018-05-18T16:02:03.049Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"#target1"</span>).css(<span class="string">"color"</span>, <span class="string">"red"</span>);</span><br><span class="line">                                </span><br><span class="line">    $(<span class="string">"#target1"</span>).prop(<span class="string">"disabled"</span>, <span class="literal">true</span>);</span><br><span class="line">                                </span><br><span class="line">    <span class="comment">// 删除 target4元素                            </span></span><br><span class="line">    $(<span class="string">"#target4"</span>).remove();</span><br><span class="line">                                </span><br><span class="line">    <span class="comment">// 元素 target2 移动到 right-well 元素后面                            </span></span><br><span class="line">    $(<span class="string">"#target2"</span>).appendTo(<span class="string">"#right-well"</span>);</span><br><span class="line">                                </span><br><span class="line">    <span class="comment">//复制 #target5 ，添加到 #left-well 元素后面                     </span></span><br><span class="line">    $(<span class="string">"#target5"</span>).clone().appendTo(<span class="string">"#left-well"</span>);   </span><br><span class="line">     </span><br><span class="line">    <span class="comment">//确保给target元素的第二个子元素添加animated和bounce class                          </span></span><br><span class="line">    $(<span class="string">".target:nth-child(2)"</span>).addClass(<span class="string">"animated bounce"</span>);</span><br><span class="line">                                </span><br><span class="line">    <span class="comment">//获取class为target且索引为奇/偶数的所有元素</span></span><br><span class="line">    $(<span class="string">".target:odd"</span>)</span><br><span class="line">    $(<span class="string">".target:even"</span>)    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 整个页面边摇晃边淡出，这个效果真的好看                            </span></span><br><span class="line">    $(<span class="string">"body"</span>).addClass(<span class="string">"animated fadeOut"</span>); </span><br><span class="line">    <span class="comment">// 这个页面歪掉然后淡出,这个也好酷</span></span><br><span class="line">    $(<span class="string">"body"</span>).addClass(<span class="string">"animated hinge"</span>);                            </span><br><span class="line">  &#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
      <category term="自学" scheme="http://yoursite.com/categories/%E8%87%AA%E5%AD%A6/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/categories/%E8%87%AA%E5%AD%A6/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="自学" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AD%A6/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>很喜欢的语句摘录</title>
    <link href="http://yoursite.com/2018/05/17/%E5%8F%A5%E5%AD%90%E6%91%98%E5%BD%95/"/>
    <id>http://yoursite.com/2018/05/17/句子摘录/</id>
    <published>2018-05-17T05:57:00.000Z</published>
    <updated>2018-05-24T11:15:20.883Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>村上春树曾经说过：肉体是每个人的神殿，不管里面供奉着的是什么，都应该好好保护它的强韧、美丽和清洁。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;村上春树曾经说过：肉体是每个人的神殿，不管里面供奉着的是什么，都应该好好保护它的强韧、美丽和清洁。&lt;/p&gt;
&lt;/blockquote&gt;

      
    
    </summary>
    
      <category term="日常" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="心情" scheme="http://yoursite.com/tags/%E5%BF%83%E6%83%85/"/>
    
      <category term="道理" scheme="http://yoursite.com/tags/%E9%81%93%E7%90%86/"/>
    
      <category term="人生感悟" scheme="http://yoursite.com/tags/%E4%BA%BA%E7%94%9F%E6%84%9F%E6%82%9F/"/>
    
      <category term="日常" scheme="http://yoursite.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>生活感悟记录</title>
    <link href="http://yoursite.com/2018/05/16/%E6%84%9F%E6%82%9F%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2018/05/16/感悟记录/</id>
    <published>2018-05-16T03:15:00.000Z</published>
    <updated>2018-05-24T11:15:20.885Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>学，是为了用。如果没有用那么学了也会非常快忘记，这就是为什么之前学的现在很多都忘了的原因。如果没有用也得为了找工作学，那就上github找找能用的上的项目。</p></li><li><p>每天逛知乎没有用，只有自己好好看书，多敲代码才最有用。只有学习更多的语言，看懂更多的代码，才能引申出更多有用的东西。获得更宽广的人生</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;学，是为了用。如果没有用那么学了也会非常快忘记，这就是为什么之前学的现在很多都忘了的原因。如果没有用也得为了找工作学，那就上github找找能用的上的项目。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;每天逛知乎没有用，只有自己好好看书，多敲代码才最有用。只有学习更
      
    
    </summary>
    
      <category term="日常" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="心情" scheme="http://yoursite.com/tags/%E5%BF%83%E6%83%85/"/>
    
      <category term="道理" scheme="http://yoursite.com/tags/%E9%81%93%E7%90%86/"/>
    
      <category term="人生感悟" scheme="http://yoursite.com/tags/%E4%BA%BA%E7%94%9F%E6%84%9F%E6%82%9F/"/>
    
      <category term="日常" scheme="http://yoursite.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博文</title>
    <link href="http://yoursite.com/2018/05/12/first_blog/"/>
    <id>http://yoursite.com/2018/05/12/first_blog/</id>
    <published>2018-05-12T08:49:00.000Z</published>
    <updated>2018-05-24T11:15:20.880Z</updated>
    
    <content type="html"><![CDATA[<p>刚刚学会用hexo搭建网站 来写第一篇博文 激励自己以后再实践中多多记录下自己遇到的困难 希望往后的自己能不断吸收大牛的经验 整理总结实践中遇到的问题对应的得到的解决方法 并根据自己的兴趣多多看书 多敲代码</p><figure class="highlight c"><figcaption><span>使用 CFile 的子类 CStdioFile 的注意事项</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">CString strPath;</span><br><span class="line">CString strRead;</span><br><span class="line">TCHAR PathPro[<span class="number">256</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">GetCurrentDirectoryW(<span class="number">256</span>,PathPro);<span class="comment">//PathPro: current dir path</span></span><br><span class="line">strPath = CString(PathPro)+_T(<span class="string">"\\"</span>) + SCRIPT_FILE_NAME;         <span class="comment">//SCRIPT_FILE_NAME: "User_Script.txt"</span></span><br><span class="line"></span><br><span class="line">CStdioFile f;  </span><br><span class="line">CFileException e;  </span><br><span class="line"><span class="keyword">if</span>(!f.Open(strPath,CFile::modeRead) )</span><br><span class="line"><span class="keyword">return</span> FALSE;  </span><br><span class="line"><span class="keyword">while</span>(f.ReadString(strRead))<span class="comment">//如果文件未读完，返回true，否则返回false。</span></span><br><span class="line">&#123;</span><br><span class="line">CString strTemp;</span><br><span class="line">strTemp.Format(_T(<span class="string">"%s\n"</span>),strRead);    <span class="comment">//检测是否成功读出每行数据</span></span><br><span class="line">LogToFiles(strTemp,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">f.Close();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;刚刚学会用hexo搭建网站 来写第一篇博文 激励自己以后再实践中多多记录下自己遇到的困难 希望往后的自己能不断吸收大牛的经验 整理总结实践中遇到的问题对应的得到的解决方法 并根据自己的兴趣多多看书 多敲代码&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="日常" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8/"/>
    
      <category term="C++" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8/C/"/>
    
    
      <category term="自学" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AD%A6/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="心情" scheme="http://yoursite.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
</feed>
